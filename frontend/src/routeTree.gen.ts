/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as ChatRouteImport } from './routes/chat'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as GenerationGenerationIdRouteImport } from './routes/generation/$generationId'
import { Route as DashboardSettingsRouteImport } from './routes/dashboard/settings'
import { Route as DashboardGalleryRouteImport } from './routes/dashboard/gallery'
import { Route as DashboardCanvasesRouteImport } from './routes/dashboard/canvases'
import { Route as DashboardAdminRouteImport } from './routes/dashboard/admin'
import { Route as ChatChatIdRouteImport } from './routes/chat/$chatId'
import { Route as CanvasCanvasIdRouteImport } from './routes/canvas/$canvasId'
import { Route as AuthSignupRouteImport } from './routes/auth/signup'
import { Route as AuthResetPasswordRouteImport } from './routes/auth/reset-password'
import { Route as AuthRecoverPasswordRouteImport } from './routes/auth/recover-password'
import { Route as AuthLoginRouteImport } from './routes/auth/login'

const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const ChatRoute = ChatRouteImport.update({
  id: '/chat',
  path: '/chat',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRoute,
} as any)
const GenerationGenerationIdRoute = GenerationGenerationIdRouteImport.update({
  id: '/generation/$generationId',
  path: '/generation/$generationId',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardSettingsRoute = DashboardSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardGalleryRoute = DashboardGalleryRouteImport.update({
  id: '/gallery',
  path: '/gallery',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardCanvasesRoute = DashboardCanvasesRouteImport.update({
  id: '/canvases',
  path: '/canvases',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardAdminRoute = DashboardAdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => DashboardRoute,
} as any)
const ChatChatIdRoute = ChatChatIdRouteImport.update({
  id: '/$chatId',
  path: '/$chatId',
  getParentRoute: () => ChatRoute,
} as any)
const CanvasCanvasIdRoute = CanvasCanvasIdRouteImport.update({
  id: '/canvas/$canvasId',
  path: '/canvas/$canvasId',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignupRoute = AuthSignupRouteImport.update({
  id: '/auth/signup',
  path: '/auth/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthResetPasswordRoute = AuthResetPasswordRouteImport.update({
  id: '/auth/reset-password',
  path: '/auth/reset-password',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRecoverPasswordRoute = AuthRecoverPasswordRouteImport.update({
  id: '/auth/recover-password',
  path: '/auth/recover-password',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/chat': typeof ChatRouteWithChildren
  '/dashboard': typeof DashboardRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/auth/recover-password': typeof AuthRecoverPasswordRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/signup': typeof AuthSignupRoute
  '/canvas/$canvasId': typeof CanvasCanvasIdRoute
  '/chat/$chatId': typeof ChatChatIdRoute
  '/dashboard/admin': typeof DashboardAdminRoute
  '/dashboard/canvases': typeof DashboardCanvasesRoute
  '/dashboard/gallery': typeof DashboardGalleryRoute
  '/dashboard/settings': typeof DashboardSettingsRoute
  '/generation/$generationId': typeof GenerationGenerationIdRoute
  '/dashboard/': typeof DashboardIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/chat': typeof ChatRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/auth/recover-password': typeof AuthRecoverPasswordRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/signup': typeof AuthSignupRoute
  '/canvas/$canvasId': typeof CanvasCanvasIdRoute
  '/chat/$chatId': typeof ChatChatIdRoute
  '/dashboard/admin': typeof DashboardAdminRoute
  '/dashboard/canvases': typeof DashboardCanvasesRoute
  '/dashboard/gallery': typeof DashboardGalleryRoute
  '/dashboard/settings': typeof DashboardSettingsRoute
  '/generation/$generationId': typeof GenerationGenerationIdRoute
  '/dashboard': typeof DashboardIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/chat': typeof ChatRouteWithChildren
  '/dashboard': typeof DashboardRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/auth/recover-password': typeof AuthRecoverPasswordRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/signup': typeof AuthSignupRoute
  '/canvas/$canvasId': typeof CanvasCanvasIdRoute
  '/chat/$chatId': typeof ChatChatIdRoute
  '/dashboard/admin': typeof DashboardAdminRoute
  '/dashboard/canvases': typeof DashboardCanvasesRoute
  '/dashboard/gallery': typeof DashboardGalleryRoute
  '/dashboard/settings': typeof DashboardSettingsRoute
  '/generation/$generationId': typeof GenerationGenerationIdRoute
  '/dashboard/': typeof DashboardIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/chat'
    | '/dashboard'
    | '/auth/login'
    | '/auth/recover-password'
    | '/auth/reset-password'
    | '/auth/signup'
    | '/canvas/$canvasId'
    | '/chat/$chatId'
    | '/dashboard/admin'
    | '/dashboard/canvases'
    | '/dashboard/gallery'
    | '/dashboard/settings'
    | '/generation/$generationId'
    | '/dashboard/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/chat'
    | '/auth/login'
    | '/auth/recover-password'
    | '/auth/reset-password'
    | '/auth/signup'
    | '/canvas/$canvasId'
    | '/chat/$chatId'
    | '/dashboard/admin'
    | '/dashboard/canvases'
    | '/dashboard/gallery'
    | '/dashboard/settings'
    | '/generation/$generationId'
    | '/dashboard'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/chat'
    | '/dashboard'
    | '/auth/login'
    | '/auth/recover-password'
    | '/auth/reset-password'
    | '/auth/signup'
    | '/canvas/$canvasId'
    | '/chat/$chatId'
    | '/dashboard/admin'
    | '/dashboard/canvases'
    | '/dashboard/gallery'
    | '/dashboard/settings'
    | '/generation/$generationId'
    | '/dashboard/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  ChatRoute: typeof ChatRouteWithChildren
  DashboardRoute: typeof DashboardRouteWithChildren
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRecoverPasswordRoute: typeof AuthRecoverPasswordRoute
  AuthResetPasswordRoute: typeof AuthResetPasswordRoute
  AuthSignupRoute: typeof AuthSignupRoute
  CanvasCanvasIdRoute: typeof CanvasCanvasIdRoute
  GenerationGenerationIdRoute: typeof GenerationGenerationIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/chat': {
      id: '/chat'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof ChatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/generation/$generationId': {
      id: '/generation/$generationId'
      path: '/generation/$generationId'
      fullPath: '/generation/$generationId'
      preLoaderRoute: typeof GenerationGenerationIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/settings': {
      id: '/dashboard/settings'
      path: '/settings'
      fullPath: '/dashboard/settings'
      preLoaderRoute: typeof DashboardSettingsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/gallery': {
      id: '/dashboard/gallery'
      path: '/gallery'
      fullPath: '/dashboard/gallery'
      preLoaderRoute: typeof DashboardGalleryRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/canvases': {
      id: '/dashboard/canvases'
      path: '/canvases'
      fullPath: '/dashboard/canvases'
      preLoaderRoute: typeof DashboardCanvasesRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/admin': {
      id: '/dashboard/admin'
      path: '/admin'
      fullPath: '/dashboard/admin'
      preLoaderRoute: typeof DashboardAdminRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/chat/$chatId': {
      id: '/chat/$chatId'
      path: '/$chatId'
      fullPath: '/chat/$chatId'
      preLoaderRoute: typeof ChatChatIdRouteImport
      parentRoute: typeof ChatRoute
    }
    '/canvas/$canvasId': {
      id: '/canvas/$canvasId'
      path: '/canvas/$canvasId'
      fullPath: '/canvas/$canvasId'
      preLoaderRoute: typeof CanvasCanvasIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/signup': {
      id: '/auth/signup'
      path: '/auth/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof AuthSignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/reset-password': {
      id: '/auth/reset-password'
      path: '/auth/reset-password'
      fullPath: '/auth/reset-password'
      preLoaderRoute: typeof AuthResetPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/recover-password': {
      id: '/auth/recover-password'
      path: '/auth/recover-password'
      fullPath: '/auth/recover-password'
      preLoaderRoute: typeof AuthRecoverPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface ChatRouteChildren {
  ChatChatIdRoute: typeof ChatChatIdRoute
}

const ChatRouteChildren: ChatRouteChildren = {
  ChatChatIdRoute: ChatChatIdRoute,
}

const ChatRouteWithChildren = ChatRoute._addFileChildren(ChatRouteChildren)

interface DashboardRouteChildren {
  DashboardAdminRoute: typeof DashboardAdminRoute
  DashboardCanvasesRoute: typeof DashboardCanvasesRoute
  DashboardGalleryRoute: typeof DashboardGalleryRoute
  DashboardSettingsRoute: typeof DashboardSettingsRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardAdminRoute: DashboardAdminRoute,
  DashboardCanvasesRoute: DashboardCanvasesRoute,
  DashboardGalleryRoute: DashboardGalleryRoute,
  DashboardSettingsRoute: DashboardSettingsRoute,
  DashboardIndexRoute: DashboardIndexRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  ChatRoute: ChatRouteWithChildren,
  DashboardRoute: DashboardRouteWithChildren,
  AuthLoginRoute: AuthLoginRoute,
  AuthRecoverPasswordRoute: AuthRecoverPasswordRoute,
  AuthResetPasswordRoute: AuthResetPasswordRoute,
  AuthSignupRoute: AuthSignupRoute,
  CanvasCanvasIdRoute: CanvasCanvasIdRoute,
  GenerationGenerationIdRoute: GenerationGenerationIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
